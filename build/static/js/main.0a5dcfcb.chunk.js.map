{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","methods","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","returnedNote","concat","value","onChange","console","log","target","type","map","i","find","n","changedNote","catch","error","setTimeout","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"kLAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCNpCK,EAAU,qDAuBDC,EANC,CACdC,OAhBa,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe3CC,OAZa,SAACC,GAEd,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,SAW3CI,OARa,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAACC,GAAD,OAAcA,EAASC,UCN9BO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,qBAAKlB,UAAU,QAAf,SAAwBkB,KCF3BC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAyFSC,EAlFH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,MAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAMrBC,qBAAU,WACRC,EAAY/B,SAASG,MAAK,SAAC6B,GACzBT,EAASS,QAEV,IAEH,IAuCMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAAC3C,GAAD,OAA6B,IAAnBA,EAAKG,aAEhC,OACE,gCACE,uCACA,cAAC,EAAD,CAAcmB,QAASe,IACvB,8BACE,yBAAQ/B,QAAS,kBAAM8B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,uBAAMS,SAhCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB1C,QAAS4B,EACTe,MAAM,IAAIC,MAAOC,cACjB/C,UAAWgD,KAAKC,SAAW,IAG7BZ,EAAYzB,OAAOgC,GAAYnC,MAAK,SAACyC,GACnCrB,EAASD,EAAMuB,OAAOD,IACtBnB,EAAW,QAsBX,UACE,uBAAOqB,MAAOtB,EAASuB,SAnBJ,SAACX,GACxBY,QAAQC,IAAIb,EAAMc,OAAOJ,OACzBrB,EAAWW,EAAMc,OAAOJ,UAkBpB,wBAAQK,KAAK,SAAb,yBAEF,6BACGlB,EAAYmB,KAAI,SAAC7D,EAAM8D,GAAP,OACf,cAAC,EAAD,CAEE9D,KAAMA,EACNC,iBAAkB,kBA7DD,SAACkB,GAC1B,IAAMnB,EAAO+B,EAAMgC,MAAK,SAACC,GAAD,OAAOA,EAAE7C,KAAOA,KAClC8C,EAAW,2BAAQjE,GAAR,IAAcG,WAAYH,EAAKG,YAEhDqC,EACGtB,OAAO+C,GACPrD,MAAK,SAACyC,GACLrB,EAASD,EAAM8B,KAAI,SAAC7D,GAAD,OAAWA,EAAKmB,KAAOA,EAAKnB,EAAOqD,SAEvDa,OAAM,SAACC,GACN7B,EAAgB,SAAD,OACJtC,EAAKK,QADD,sCAGf+D,YAAW,WACT9B,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACqB,GAAD,OAAOA,EAAE7C,KAAOA,SA6CVkD,CAAmBrE,EAAKmB,MAF3C2C,QAMX,cAAC,EAAD,Q,MC7FNQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0a5dcfcb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\n// const baseUrl = 'http://localhost:3003/api/notes'\nconst baseUrl = 'https://polar-cliffs-65918.herokuapp.com/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then((response) => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then((response) => response.data)\n}\n\nconst methods = {\n  getAll,\n  create,\n  update\n}\n\nexport default methods\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return <div className=\"error\">{message}</div>\n}\n\nexport default Notification\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  )\n}\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes)\n    })\n  }, [])\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter((n) => n.id !== id))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Add Note</button>\n      </form>\n      <ul>\n        {notesToShow.map((note, i) => (\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}